{"version":3,"sources":["actions/projectActions.js","actions/types.js","components/Project/Projectitem.js","components/Project/CreateProjectButton.js","components/Dashboard.js","securityUtils/setJWTToken.js","actions/securityActions.js","components/Layout/Header.js","components/Project/AddProject.js","reducers/errorReducer.js","reducers/projectReducer.js","reducers/backlogReducer.js","reducers/securityReducer.js","reducers/index.js","store.js","components/Project/UpdateProject.js","actions/backlogActions.js","components/ProjectBoard/ProjectTask/ProjectTask.js","components/ProjectBoard/Backlog.js","components/ProjectBoard/ProjectBoard.js","components/ProjectBoard/ProjectTask/AddProjectTask.js","components/ProjectBoard/ProjectTask/UpdateProjectTask.js","components/Layout/Landing.js","components/UserManagement/Register.js","components/UserManagement/Login.js","securityUtils/SecureRoute.js","App.js","serviceWorker.js","index.js"],"names":["createProject","project","history","dispatch","a","async","axios","post","push","type","payload","response","data","ProjectItem","onDeleteClick","id","props","deleteProject","this","className","projectIdentifier","projectName","description","to","onClick","bind","Component","connect","msg","window","confirm","delete","CreateProjectButton","Fragment","Dashboard","getProjects","projects","map","key","state","get","res","setJWTToken","token","defaults","headers","common","logout","localStorage","removeItem","Header","location","href","headerLinks","security","validToken","user","userIsAuthenticated","fullName","userIsNotAuthenticated","data-toggle","data-target","AddProject","start_date","end_date","errors","onChange","onSubmit","nextProps","setState","e","target","name","value","preventDefault","newProject","classnames","placeholder","intialState","project_tasks","project_task","initialState","booleanActionPayload","combineReducers","action","filter","backlog","projectSequence","initalState","middleware","thunk","ReactReduxDevTools","__REDUX_DEVTOOLS_EXTENSION__","store","navigator","userAgent","includes","createStore","rootReducer","compose","applyMiddleware","UpdateProject","nextProp","match","params","getProject","updateProject","disabled","addProjectTask","backlog_id","ProjectTask","pt_id","deleteProjectTask","priorityString","priorityClass","priority","summary","acceptanceCriteria","Backlog","tasks","project_tasks_prop","todoItems","inprogressItems","doneItems","i","length","status","ProjectBoard","getBacklog","BoardContenet","projectNotFound","role","boardAlgorithm","AddProjectTask","dueDate","newProjectTask","propTypes","PropTypes","func","isRequired","object","UpdateProjectTask","create_At","getProjectTask","updateProjectTask","patch","Landing","Register","username","fullname","password","confirmPassword","newUser","createNewUser","Login","LoginRequest","login","setItem","decoded","jwt_decode","component","otherProps","render","jwtToken","decode_jwtToken","currentTime","Date","now","exp","App","exact","path","Boolean","hostname","ReactDOM","document","getElementById","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.df5c1b0f.chunk.js","sourcesContent":["import axios from \"axios\";\r\nimport { GET_ERRORS, GET_PROJECTS, GET_PROJECT, DELETE_PROJECT } from \"./types\";\r\n\r\nexport const createProject = (project, history) => async dispatch => {\r\n  try {\r\n    //const res = await axios.post(\"http://localhost:8080/api/project\", project);\r\n    await axios.post(\"/api/project\", project); // base URL is proxy defined in package.json\r\n    history.push(\"/dashboard\");\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: {}\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: err.response.data\r\n    });\r\n  }\r\n};\r\n\r\nexport const getProjects = () => async dispatch => {\r\n  const res = await axios.get(\"/api/project/all\");\r\n  dispatch({\r\n    type: GET_PROJECTS,\r\n    payload: res.data\r\n  });\r\n};\r\n\r\nexport const getProject = (id, history) => async dispatch => {\r\n  try {\r\n    const res = await axios.get(`/api/project/${id}`, id); //base URL is proxy defined in package.json\r\n    dispatch({\r\n      type: GET_PROJECT,\r\n      payload: res.data\r\n    });\r\n  } catch (errors) {\r\n    history.push(\"/dashboard\");\r\n  }\r\n};\r\n\r\nexport const deleteProject = id => async dispatch => {\r\n  var msg =\r\n    \"Are you sure? This will delete the project \" +\r\n    id +\r\n    \" and all the data related to it\";\r\n  if (window.confirm(msg)) {\r\n    await axios.delete(`/api/project/${id}`, id); // base URL is proxy defined in package.json\r\n    dispatch({\r\n      type: DELETE_PROJECT,\r\n      payload: id\r\n    });\r\n  }\r\n};\r\n","export const GET_ERRORS = \"GET_ERRORS\";\r\nexport const GET_PROJECTS = \"GET_PROJECTS\";\r\nexport const GET_PROJECT = \"GET_PROJECT\";\r\nexport const DELETE_PROJECT = \"DELETE_PROJECT\";\r\n\r\n// Types for Backlog actions\r\n\r\nexport const GET_BACKLOG = \"GET_BACKLOG\";\r\nexport const GET_PROJECT_TASK = \"GET_PROJECT_TASK\";\r\nexport const DELETE_PROJECT_TASK = \"DELETE_PROJECT_TASK\";\r\n\r\nexport const SET_CURRENT_USER = \"SET_CURRENT_USER\";\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { deleteProject } from \"../../actions/projectActions\";\r\n\r\nclass ProjectItem extends Component {\r\n  onDeleteClick = id => {\r\n    this.props.deleteProject(id);\r\n  };\r\n\r\n  render() {\r\n    const { project } = this.props;\r\n    return (\r\n      <div className=\"container\">\r\n        <div className=\"card card-body bg-light mb-3\">\r\n          <div className=\"row\">\r\n            <div className=\"col-2\">\r\n              <span className=\"mx-auto\">{project.projectIdentifier}</span>\r\n            </div>\r\n            <div className=\"col-lg-6 col-md-4 col-8\">\r\n              <h3>{project.projectName}</h3>\r\n              <p>{project.description}</p>\r\n            </div>\r\n            <div className=\"col-md-4 d-none d-lg-block\">\r\n              <ul className=\"list-group\">\r\n                <Link to={`/projectBoard/${project.projectIdentifier}`}>\r\n                  <li className=\"list-group-item board\">\r\n                    <i className=\"fa fa-flag-checkered pr-1\"> Project Board </i>\r\n                  </li>\r\n                </Link>\r\n\r\n                <Link to={`/updateProject/${project.projectIdentifier}`}>\r\n                  <li className=\"list-group-item update\">\r\n                    <i className=\"fa fa-edit pr-1\"> Update Project Info</i>\r\n                  </li>\r\n                </Link>\r\n\r\n                <li\r\n                  className=\"list-group-item delete\"\r\n                  onClick={this.onDeleteClick.bind(\r\n                    this,\r\n                    project.projectIdentifier\r\n                  )}\r\n                >\r\n                  <i className=\"fa fa-minus-circle pr-1\"> Delete Project</i>\r\n                </li>\r\n              </ul>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nProjectItem.propTypes = {\r\n  deleteProject: PropTypes.func.isRequired\r\n};\r\nexport default connect(null, { deleteProject })(ProjectItem);\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst CreateProjectButton = () => {\r\n  return (\r\n    <React.Fragment>\r\n      <Link to=\"/addProject\" className=\"btn btn-lg btn-info\">\r\n        Create a Project\r\n      </Link>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default CreateProjectButton;\r\n","import React, { Component } from \"react\";\r\nimport ProjectItem from \"./Project/Projectitem\";\r\nimport CreateProjectButton from \"./Project/CreateProjectButton\";\r\nimport { connect } from \"react-redux\";\r\nimport { getProjects } from \"../actions/projectActions\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nclass Dashboard extends Component {\r\n  componentDidMount() {\r\n    this.props.getProjects();\r\n  }\r\n  render() {\r\n    const { projects } = this.props.project;\r\n    //\r\n    //const projectObject = {\r\n    //  projectName: \"ProjectName PROPS\",\r\n    //  projectIdentifier: \"PROPS...\",\r\n    //  description: \"description from PROPS\"\r\n    //};\r\n\r\n    return (\r\n      <div className=\"projects\">\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-12\">\r\n              <h1 className=\"display-4 text-center\">Projects</h1>\r\n              <br />\r\n              <CreateProjectButton />\r\n              <br />\r\n              <hr />\r\n              {projects.map(project => (\r\n                <ProjectItem key={project.id} project={project} />\r\n              ))}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nDashboard.propTypes = {\r\n  project: PropTypes.object.isRequired,\r\n  getProjects: PropTypes.func.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  project: state.project\r\n});\r\n\r\nexport default connect(mapStateToProps, { getProjects })(Dashboard);\r\n","import axios from \"axios\";\r\n\r\nconst setJWTToken = token => {\r\n  if (token) {\r\n    axios.defaults.headers.common[\"Authorization\"] = token;\r\n  } else {\r\n    delete axios.defaults.headers.common[\"Authorization\"];\r\n  }\r\n};\r\n\r\nexport default setJWTToken;\r\n","import axios from \"axios\";\r\nimport { GET_ERRORS, SET_CURRENT_USER } from \"./types\";\r\nimport setJWTToken from \"../securityUtils/setJWTToken\";\r\nimport jwt_decode from \"jwt-decode\";\r\n\r\nexport const createNewUser = (newUser, history) => async dispatch => {\r\n  try {\r\n    await axios.post(\"/api/users/register\", newUser);\r\n    history.push(\"/login\");\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: {}\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: error.response.data\r\n    });\r\n  }\r\n};\r\n\r\nexport const login = LoginRequest => async dispatch => {\r\n  try {\r\n    //post ==> login request endpoint\r\n    const res = await axios.post(\"/api/users/login\", LoginRequest);\r\n\r\n    // extract token from res.data\r\n    const { token } = res.data;\r\n\r\n    // store the token in the localstorage\r\n    localStorage.setItem(\"jwtToken\", token);\r\n\r\n    // set our token in header ***\r\n    setJWTToken(token);\r\n\r\n    // decode token on react\r\n    const decoded = jwt_decode(token);\r\n\r\n    // dispatch to our security reducer\r\n\r\n    dispatch({\r\n      type: SET_CURRENT_USER,\r\n      payload: decoded\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: error.response.data\r\n    });\r\n  }\r\n};\r\n\r\nexport const logout = () => dispatch => {\r\n  localStorage.removeItem(\"jwtToken\");\r\n  setJWTToken(false);\r\n  dispatch({\r\n    type: SET_CURRENT_USER,\r\n    payload: {}\r\n  });\r\n};\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { logout } from \"../../actions/securityActions\";\r\n\r\nclass Header extends Component {\r\n  logout() {\r\n    this.props.logout();\r\n    window.location.href = \"/\";\r\n  }\r\n\r\n  render() {\r\n    const { validToken, user } = this.props.security;\r\n\r\n    const userIsAuthenticated = (\r\n      <div className=\"collapse navbar-collapse\" id=\"mobile-nav\">\r\n        <ul className=\"navbar-nav mr-auto\">\r\n          <li className=\"nav-item\">\r\n            <Link className=\"nav-link\" to=\"/dashboard\">\r\n              {\"\"}\r\n              Dashboard\r\n            </Link>\r\n          </li>\r\n        </ul>\r\n\r\n        <ul className=\"navbar-nav ml-auto\">\r\n          <li className=\"nav-item\">\r\n            <Link className=\"nav-link\" to=\"/dashboard\">\r\n              <i className=\"fas fa-user-circle mr-1\" /> {user.fullName}\r\n            </Link>\r\n          </li>\r\n          <li className=\"nav-item\">\r\n            <Link\r\n              className=\"nav-link\"\r\n              to=\"/logout\"\r\n              onClick={this.logout.bind(this)}\r\n            >\r\n              {\" \"}\r\n              Logout\r\n            </Link>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    );\r\n\r\n    const userIsNotAuthenticated = (\r\n      <div className=\"collapse navbar-collapse\" id=\"mobile-nav\">\r\n        <ul className=\"navbar-nav ml-auto\">\r\n          <li className=\"nav-item\">\r\n            <Link className=\"nav-link\" to=\"/register\">\r\n              {\"\"}\r\n              Sign up\r\n            </Link>\r\n          </li>\r\n          <li className=\"nav-item\">\r\n            <Link className=\"nav-link\" to=\"/login\">\r\n              {\"\"}\r\n              Login\r\n            </Link>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    );\r\n\r\n    let headerLinks;\r\n\r\n    if (validToken && user) {\r\n      headerLinks = userIsAuthenticated;\r\n    } else {\r\n      headerLinks = userIsNotAuthenticated;\r\n    }\r\n\r\n    return (\r\n      <nav className=\"navbar navbar-expand-sm navbar-dark bg-primary mb-4\">\r\n        <div className=\"container\">\r\n          <Link className=\"navbar-brand\" to=\"/\">\r\n            {\"\"}\r\n            My-Personal Project Management Tool\r\n          </Link>\r\n\r\n          <button\r\n            className=\"navbar-toggler\"\r\n            type=\"button\"\r\n            data-toggle=\"collapse\"\r\n            data-target=\"#mobile-nav\"\r\n          >\r\n            <span className=\"navbar-toggler-icon\" />\r\n          </button>\r\n          {headerLinks}\r\n        </div>\r\n      </nav>\r\n    );\r\n  }\r\n}\r\n\r\nHeader.propTypes = {\r\n  logout: PropTypes.func.isRequired,\r\n  security: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  security: state.security\r\n});\r\n\r\nexport default connect(mapStateToProps, { logout })(Header);\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { createProject } from \"../../actions/projectActions\";\r\nimport classnames from \"classnames\";\r\n\r\nclass AddProject extends Component {\r\n  constructor() {\r\n    super();\r\n\r\n    this.state = {\r\n      projectName: \"\",\r\n      projectIdentifier: \"\",\r\n      description: \"\",\r\n      start_date: \"\",\r\n      end_date: \"\",\r\n      errors: {}\r\n    };\r\n\r\n    this.onChange = this.onChange.bind(this);\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n  }\r\n\r\n  //life cycle hooks in react - readup on this subject to learn more\r\n  componentWillReceiveProps(nextProps) {\r\n    if (nextProps.errors) {\r\n      this.setState({ errors: nextProps.errors });\r\n    }\r\n  }\r\n\r\n  onChange(e) {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  }\r\n\r\n  onSubmit(e) {\r\n    e.preventDefault();\r\n    const newProject = {\r\n      projectName: this.state.projectName,\r\n      projectIdentifier: this.state.projectIdentifier,\r\n      description: this.state.description,\r\n      start_date: this.state.start_date,\r\n      end_date: this.state.end_date\r\n    };\r\n    this.props.createProject(newProject, this.props.history);\r\n    //console.log(newProject);\r\n  }\r\n  render() {\r\n    const { errors } = this.state;\r\n\r\n    return (\r\n      <div className=\"register\">\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-8 m-auto\">\r\n              <h5 className=\"display-4 text-center\">Create Project form</h5>\r\n              <hr />\r\n              <form onSubmit={this.onSubmit}>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"text\"\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                      \"is-invalid\": errors.projectName\r\n                    })}\r\n                    placeholder=\"Project Name\"\r\n                    name=\"projectName\"\r\n                    value={this.state.projectName}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  {errors.projectName && (\r\n                    <div className=\"invalid-feedback\">{errors.projectName}</div>\r\n                  )}\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"text\"\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                      \"is-invalid\": errors.projectIdentifier\r\n                    })}\r\n                    placeholder=\"Unique Project ID\"\r\n                    name=\"projectIdentifier\"\r\n                    value={this.state.projectIdentifier}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  {errors.projectIdentifier && (\r\n                    <div className=\"invalid-feedback\">\r\n                      {errors.projectIdentifier}\r\n                    </div>\r\n                  )}\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <textarea\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                      \"is-invalid\": errors.description\r\n                    })}\r\n                    placeholder=\"Project Description\"\r\n                    name=\"description\"\r\n                    value={this.state.description}\r\n                    onChange={this.onChange}\r\n                  ></textarea>\r\n                  {errors.description && (\r\n                    <div className=\"invalid-feedback\">{errors.description}</div>\r\n                  )}\r\n                </div>\r\n                <h6>Start Date</h6>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"date\"\r\n                    className=\"form-control form-control-lg\"\r\n                    name=\"start_date\"\r\n                    value={this.state.start_date}\r\n                    onChange={this.onChange}\r\n                  />\r\n                </div>\r\n                <h6>Estimated End Date</h6>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"date\"\r\n                    className=\"form-control form-control-lg\"\r\n                    name=\"end_date\"\r\n                    value={this.state.end_date}\r\n                    onChange={this.onChange}\r\n                  />\r\n                </div>\r\n\r\n                <input\r\n                  type=\"submit\"\r\n                  className=\"btn btn-primary btn-block mt-4\"\r\n                />\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nAddProject.propTypes = {\r\n  createProject: PropTypes.func.isRequired,\r\n  errors: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({ errors: state.errors });\r\nexport default connect(mapStateToProps, { createProject })(AddProject);\r\n","import { GET_ERRORS } from \"../actions/types\";\r\n\r\nconst intialState = {};\r\n\r\nexport default function(state = intialState, action) {\r\n  switch (action.type) {\r\n    case GET_ERRORS:\r\n      return action.payload;\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { GET_PROJECTS, GET_PROJECT, DELETE_PROJECT } from \"../actions/types\";\r\n\r\nconst intialState = {\r\n  projects: [],\r\n  project: {}\r\n};\r\n\r\nexport default function(state = intialState, action) {\r\n  switch (action.type) {\r\n    case GET_PROJECTS:\r\n      return {\r\n        ...state,\r\n        projects: action.payload\r\n      };\r\n\r\n    case GET_PROJECT:\r\n      return {\r\n        ...state,\r\n        project: action.payload\r\n      };\r\n\r\n    case DELETE_PROJECT:\r\n      return {\r\n        ...state,\r\n        //projects: action.payload //this line would make a GET call to backend but following filter function removes the deleted project from the list using redux\r\n        projects: state.projects.filter(\r\n          project => project.projectIdentifier !== action.payload\r\n        )\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import {\r\n  GET_BACKLOG,\r\n  GET_PROJECT_TASK,\r\n  DELETE_PROJECT_TASK\r\n} from \"../actions/types\";\r\n\r\nconst intialState = {\r\n  project_tasks: [],\r\n  project_task: {}\r\n};\r\n\r\nexport default function(state = intialState, action) {\r\n  switch (action.type) {\r\n    case GET_BACKLOG:\r\n      return {\r\n        ...state,\r\n        project_tasks: action.payload\r\n      };\r\n    case GET_PROJECT_TASK:\r\n      return {\r\n        ...state,\r\n        project_task: action.payload\r\n      };\r\n    case DELETE_PROJECT_TASK:\r\n      return {\r\n        ...state,\r\n\r\n        project_tasks: state.project_tasks.filter(\r\n          project_task => project_task.projectSequence !== action.payload\r\n        )\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { SET_CURRENT_USER } from \"../actions/types\";\r\n\r\nconst initialState = {\r\n  user: {},\r\n  validToken: false\r\n};\r\n\r\nconst booleanActionPayload = payload => {\r\n  if (payload) {\r\n    return true;\r\n  } else {\r\n    return false;\r\n  }\r\n};\r\nexport default function(state = initialState, action) {\r\n  switch (action.type) {\r\n    case SET_CURRENT_USER:\r\n      return {\r\n        ...state,\r\n        validToken: booleanActionPayload(action.payload),\r\n        user: action.payload\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { combineReducers } from \"redux\";\r\nimport errorReducer from \"./errorReducer\";\r\nimport projectReducer from \"./projectReducer\";\r\nimport backlogReducer from \"./backlogReducer\";\r\nimport securityReducer from \"./securityReducer\";\r\n\r\nexport default combineReducers({\r\n  errors: errorReducer,\r\n  project: projectReducer,\r\n  backlog: backlogReducer,\r\n  security: securityReducer\r\n});\r\n","import { createStore, applyMiddleware, compose } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport rootReducer from \"./reducers\";\r\n\r\nconst initalState = {};\r\nconst middleware = [thunk];\r\n\r\nlet store;\r\n\r\nconst ReactReduxDevTools =\r\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__();\r\n\r\nif (window.navigator.userAgent.includes(\"Chrome\") && ReactReduxDevTools) {\r\n  store = createStore(\r\n    rootReducer,\r\n    initalState,\r\n    compose(applyMiddleware(...middleware), ReactReduxDevTools)\r\n  );\r\n} else {\r\n  store = createStore(\r\n    rootReducer,\r\n    initalState,\r\n    compose(applyMiddleware(...middleware))\r\n  );\r\n}\r\nexport default store;\r\n","import React, { Component } from \"react\";\r\nimport { getProject, createProject } from \"../../actions/projectActions\";\r\nimport { PropTypes } from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport classnames from \"classnames\";\r\n\r\nclass UpdateProject extends Component {\r\n  constructor() {\r\n    super();\r\n\r\n    this.state = {\r\n      id: \"\",\r\n      projectName: \"\",\r\n      projectIdentifier: \"\",\r\n      description: \"\",\r\n      start_date: \"\",\r\n      end_date: \"\",\r\n      errors: {}\r\n    };\r\n\r\n    this.onChange = this.onChange.bind(this);\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n  }\r\n\r\n  componentWillReceiveProps(nextProp) {\r\n    if (nextProp.errors) {\r\n      this.setState({ errors: nextProp.errors });\r\n    }\r\n\r\n    const {\r\n      id,\r\n      projectName,\r\n      projectIdentifier,\r\n      description,\r\n      start_date,\r\n      end_date\r\n    } = nextProp.project;\r\n\r\n    this.setState({\r\n      id,\r\n      projectName,\r\n      projectIdentifier,\r\n      description,\r\n      start_date,\r\n      end_date\r\n    });\r\n  }\r\n\r\n  componentDidMount() {\r\n    const { id } = this.props.match.params;\r\n    this.props.getProject(id, this.props.history);\r\n  }\r\n\r\n  onChange(e) {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  }\r\n\r\n  onSubmit(e) {\r\n    e.preventDefault();\r\n    const updateProject = {\r\n      id: this.state.id,\r\n      projectName: this.state.projectName,\r\n      projectIdentifier: this.state.projectIdentifier,\r\n      description: this.state.description,\r\n      start_date: this.state.start_date,\r\n      end_date: this.state.end_date\r\n    };\r\n    this.props.createProject(updateProject, this.props.history);\r\n    //console.log(newProject);\r\n  }\r\n  render() {\r\n    const { errors } = this.state;\r\n    return (\r\n      <div className=\"project\">\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-8 m-auto\">\r\n              <h5 className=\"display-4 text-center\">Update Project form</h5>\r\n              <hr />\r\n              <form onSubmit={this.onSubmit}>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"text\"\r\n                    //className=\"form-control form-control-lg \"\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                      \"is-invalid\": errors.projectName\r\n                    })}\r\n                    placeholder=\"Project Name\"\r\n                    name=\"projectName\"\r\n                    value={this.state.projectName}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  {errors.projectName && (\r\n                    <div className=\"invalid-feedback\">{errors.projectName}</div>\r\n                  )}\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"text\"\r\n                    className=\"form-control form-control-lg \"\r\n                    placeholder=\"Unique Project ID\"\r\n                    name=\"projectIdentifier\"\r\n                    value={this.state.projectIdentifier}\r\n                    onChange={this.onChange}\r\n                    disabled\r\n                  />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <textarea\r\n                    //className=\"form-control form-control-lg \"\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                      \"is-invalid\": errors.description\r\n                    })}\r\n                    placeholder=\"Project Description\"\r\n                    name=\"description\"\r\n                    value={this.state.description}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  {errors.description && (\r\n                    <div className=\"invalid-feedback\">{errors.description}</div>\r\n                  )}\r\n                </div>\r\n                <h6>Start Date</h6>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"date\"\r\n                    className=\"form-control form-control-lg \"\r\n                    name=\"start_date\"\r\n                    value={this.state.start_date}\r\n                    onChange={this.onChange}\r\n                  />\r\n                </div>\r\n                <h6>Estimated End Date</h6>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"date\"\r\n                    className=\"form-control form-control-lg \"\r\n                    name=\"end_date\"\r\n                    value={this.state.end_date}\r\n                    onChange={this.onChange}\r\n                  />\r\n                </div>\r\n\r\n                <input\r\n                  type=\"submit\"\r\n                  className=\"btn btn-primary btn-block mt-4\"\r\n                />\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nUpdateProject.propTypes = {\r\n  getProject: PropTypes.func.isRequired,\r\n  createProject: PropTypes.func.isRequired,\r\n  project: PropTypes.object.isRequired,\r\n  errors: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  project: state.project.project,\r\n  errors: state.errors\r\n});\r\n\r\nexport default connect(mapStateToProps, { getProject, createProject })(\r\n  UpdateProject\r\n);\r\n","import axios from \"axios\";\r\nimport {\r\n  GET_ERRORS,\r\n  GET_BACKLOG,\r\n  GET_PROJECT_TASK,\r\n  DELETE_PROJECT_TASK\r\n} from \"./types\";\r\n\r\nexport const addProjectTask = (\r\n  backlog_id,\r\n  project_task,\r\n  history\r\n) => async dispatch => {\r\n  try {\r\n    await axios.post(`/api/backlog/${backlog_id}`, project_task); // base URL is proxy defined in package.json\r\n    history.push(`/projectBoard/${backlog_id}`);\r\n\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: {}\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: err.response.data\r\n    });\r\n  }\r\n};\r\n\r\nexport const getBacklog = backlog_id => async dispatch => {\r\n  try {\r\n    const res = await axios.get(`/api/backlog/${backlog_id}`); //base URL is proxy defined in package.json\r\n    dispatch({\r\n      type: GET_BACKLOG,\r\n      payload: res.data\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: err.response.data\r\n    });\r\n    //history.push(`/projectBoard/${backlog_id}`);\r\n  }\r\n};\r\n\r\nexport const getProjectTask = (\r\n  backlog_id,\r\n  pt_id,\r\n  history\r\n) => async dispatch => {\r\n  try {\r\n    const res = await axios.get(`/api/backlog/${backlog_id}/${pt_id}`);\r\n    dispatch({\r\n      type: GET_PROJECT_TASK,\r\n      payload: res.data\r\n    });\r\n  } catch (err) {\r\n    history.push(`/dashboard`);\r\n  }\r\n};\r\n\r\nexport const updateProjectTask = (\r\n  backlog_id,\r\n  pt_id,\r\n  project_task,\r\n  history\r\n) => async dispatch => {\r\n  try {\r\n    await axios.patch(`/api/backlog/${backlog_id}/${pt_id}`, project_task);\r\n    history.push(`/projectBoard/${backlog_id}`);\r\n\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: {}\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: err.response.data\r\n    });\r\n  }\r\n};\r\n\r\nexport const deleteProjectTask = (backlog_id, pt_id) => async dispatch => {\r\n  var msg =\r\n    \"Are you sure? This will delete this task \" +\r\n    pt_id +\r\n    \" and all the data related to it! Can't be undone\";\r\n  if (window.confirm(msg)) {\r\n    await axios.delete(`/api/backlog/${backlog_id}/${pt_id}`);\r\n\r\n    dispatch({\r\n      type: DELETE_PROJECT_TASK,\r\n      payload: pt_id\r\n    });\r\n\r\n    //history.push(`/projectBoard/${backlog_id}`);\r\n  }\r\n};\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport { deleteProjectTask } from \"../../../actions/backlogActions\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nclass ProjectTask extends Component {\r\n  onDeleteClick(backlog_id, pt_id) {\r\n    this.props.deleteProjectTask(backlog_id, pt_id);\r\n  }\r\n\r\n  render() {\r\n    const { project_task } = this.props;\r\n\r\n    let priorityString;\r\n    let priorityClass;\r\n\r\n    if (project_task.priority === 1) {\r\n      priorityString = \"HIGH\";\r\n      priorityClass = \"bg-danger text-light\";\r\n    }\r\n\r\n    if (project_task.priority === 2) {\r\n      priorityString = \"MEDIUM\";\r\n      priorityClass = \"bg-warning text-light\";\r\n    }\r\n\r\n    if (project_task.priority === 3) {\r\n      priorityString = \"LOW\";\r\n      priorityClass = \"bg-info text-light\";\r\n    }\r\n\r\n    return (\r\n      <div className=\"card mb-1 bg-light\">\r\n        <div className={`card-header text-primary ${priorityClass}`}>\r\n          ID: {project_task.projectSequence} -- Priority:{priorityString}\r\n          {project_task.priority}\r\n        </div>\r\n        <div className=\"card-body bg-light\">\r\n          <h5 className=\"card-title\">{project_task.summary}</h5>\r\n          <p className=\"card-text text-truncate \">\r\n            {project_task.acceptanceCriteria}\r\n          </p>\r\n          <Link\r\n            to={`/updateProjectTask/${project_task.projectIdentifier}/${project_task.projectSequence}`}\r\n            className=\"btn btn-primary\"\r\n          >\r\n            View / Update\r\n          </Link>\r\n          <button\r\n            className=\"btn btn-danger ml-4\"\r\n            onClick={this.onDeleteClick.bind(\r\n              this,\r\n              project_task.projectIdentifier,\r\n              project_task.projectSequence\r\n            )}\r\n          >\r\n            Delete\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nProjectTask.propTypes = {\r\n  deleteProjectTask: PropTypes.func.isRequired\r\n};\r\nexport default connect(null, { deleteProjectTask })(ProjectTask);\r\n","import React, { Component } from \"react\";\r\nimport ProjectTask from \"./ProjectTask/ProjectTask\";\r\n\r\n//import classnames from \"classnames\";\r\n//import PropTypes from \"prop-types\";\r\n//import { getBacklog } from \"../../actions/backlogActions\";\r\n\r\nclass Backlog extends Component {\r\n  render() {\r\n    const { project_tasks_prop } = this.props;\r\n\r\n    const tasks = project_tasks_prop.map(project_task => (\r\n      <ProjectTask key={project_task.id} project_task={project_task} />\r\n    ));\r\n\r\n    let todoItems = [];\r\n    let inprogressItems = [];\r\n    let doneItems = [];\r\n\r\n    for (let i = 0; i < tasks.length; i++) {\r\n      //console.log(tasks[i]);\r\n      if (tasks[i].props.project_task.status === \"TO_DO\") {\r\n        todoItems.push(tasks[i]);\r\n      }\r\n      if (tasks[i].props.project_task.status === \"IN_PROGRESS\") {\r\n        inprogressItems.push(tasks[i]);\r\n      }\r\n      if (tasks[i].props.project_task.status === \"DONE\") {\r\n        doneItems.push(tasks[i]);\r\n      }\r\n    }\r\n\r\n    return (\r\n      <div className=\"container\">\r\n        <div className=\"row\">\r\n          <div className=\"col-md-4\">\r\n            <div className=\"card text-center mb-2\">\r\n              <div className=\"card-header bg-secondary text-white\">\r\n                <h3>TO DO</h3>\r\n              </div>\r\n            </div>\r\n            {todoItems}\r\n          </div>\r\n          <div className=\"col-md-4\">\r\n            <div className=\"card text-center mb-2\">\r\n              <div className=\"card-header bg-primary text-white\">\r\n                <h3>In Progress</h3>\r\n              </div>\r\n            </div>\r\n            {inprogressItems}\r\n          </div>\r\n          <div className=\"col-md-4\">\r\n            <div className=\"card text-center mb-2\">\r\n              <div className=\"card-header bg-success text-white\">\r\n                <h3>Done</h3>\r\n              </div>\r\n            </div>\r\n            {doneItems}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Backlog;\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Backlog from \"./Backlog\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport { getBacklog } from \"../../actions/backlogActions\";\r\n\r\nclass ProjectBoard extends Component {\r\n  // constructor to handle errors.\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      errors: {}\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    const { id } = this.props.match.params;\r\n    this.props.getBacklog(id);\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    if (nextProps.errors) {\r\n      this.setState({ errors: nextProps.errors });\r\n    }\r\n  }\r\n  render() {\r\n    const { id } = this.props.match.params;\r\n    const { project_tasks } = this.props.backlog;\r\n    const { errors } = this.state;\r\n\r\n    let BoardContenet;\r\n\r\n    const boardAlgorithm = (errors, project_tasks) => {\r\n      if (project_tasks.length < 1) {\r\n        if (errors.projectNotFound) {\r\n          return (\r\n            <div className=\"alert alert-danger text-center\" role=\"alert\">\r\n              {errors.projectNotFound}\r\n            </div>\r\n          );\r\n        } else if (errors.projectIdentifier) {\r\n          return (\r\n            <div className=\"alert alert-danger text-center\" role=\"alert\">\r\n              {errors.projectIdentifier}\r\n            </div>\r\n          );\r\n        } else {\r\n          return (\r\n            <div className=\"alert alert-info text-center\" role=\"alert\">\r\n              No Project Tasks on this board\r\n            </div>\r\n          );\r\n        }\r\n      } else {\r\n        return <Backlog project_tasks_prop={project_tasks} />;\r\n      }\r\n    };\r\n\r\n    BoardContenet = boardAlgorithm(errors, project_tasks);\r\n\r\n    return (\r\n      <div className=\"container\">\r\n        <Link to={`/addProjectTask/${id}`} className=\"btn btn-primary mb-3\">\r\n          <i className=\"fas fa-plus-circle\"> Create Project Task</i>\r\n        </Link>\r\n        <br />\r\n        <hr />\r\n        {BoardContenet}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nProjectBoard.propTypes = {\r\n  backlog: PropTypes.object.isRequired,\r\n  getBacklog: PropTypes.func.isRequired,\r\n  errors: PropTypes.object.isRequired\r\n};\r\nconst mapStateToProps = state => ({\r\n  backlog: state.backlog,\r\n  errors: state.errors\r\n});\r\n\r\nexport default connect(mapStateToProps, { getBacklog })(ProjectBoard);\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport classnames from \"classnames\";\r\nimport { addProjectTask } from \"../../../actions/backlogActions\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nclass AddProjectTask extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    const { id } = this.props.match.params;\r\n\r\n    this.state = {\r\n      summary: \"\",\r\n      acceptanceCriteria: \"\",\r\n      status: \"\",\r\n      priority: 0,\r\n      dueDate: \"\",\r\n      projectIdentifier: id,\r\n      errors: {}\r\n    };\r\n\r\n    this.onChange = this.onChange.bind(this);\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n  }\r\n\r\n  //life cycle hooks in react - readup on this subject to learn more\r\n  componentWillReceiveProps(nextProps) {\r\n    if (nextProps.errors) {\r\n      this.setState({ errors: nextProps.errors });\r\n    }\r\n  }\r\n\r\n  onChange(e) {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  }\r\n\r\n  onSubmit(e) {\r\n    e.preventDefault();\r\n\r\n    const newProjectTask = {\r\n      summary: this.state.summary,\r\n      acceptanceCriteria: this.state.acceptanceCriteria,\r\n      status: this.state.status,\r\n      priority: this.state.priority,\r\n      dueDate: this.state.dueDate\r\n      //projectIdentifier: this.state.projectIdentifier\r\n    };\r\n    this.props.addProjectTask(\r\n      this.state.projectIdentifier,\r\n      newProjectTask,\r\n      this.props.history\r\n    );\r\n    //console.log(newProjectTask);\r\n  }\r\n\r\n  render() {\r\n    const { id } = this.props.match.params;\r\n    const { errors } = this.state;\r\n\r\n    return (\r\n      <div className=\"add-PBI\">\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-8 m-auto\">\r\n              <Link to={`/projectBoard/${id}`} className=\"btn btn-light\">\r\n                Back to Project Board\r\n              </Link>\r\n              <h4 className=\"display-4 text-center\">Add Project Task</h4>\r\n              <p className=\"lead text-center\">Project Name + Project Code</p>\r\n              <form onSubmit={this.onSubmit}>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"text\"\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                      \"is-invalid\": errors.summary\r\n                    })}\r\n                    name=\"summary\"\r\n                    value={this.state.summary}\r\n                    placeholder=\"Project Task summary\"\r\n                    onChange={this.onChange}\r\n                  />\r\n                  {errors.summary && (\r\n                    <div className=\"invalid-feedback\">{errors.summary}</div>\r\n                  )}\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <textarea\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                      \"is-invalid\": errors.acceptanceCriteria\r\n                    })}\r\n                    placeholder=\"Acceptance Criteria\"\r\n                    name=\"acceptanceCriteria\"\r\n                    value={this.state.acceptanceCriteria}\r\n                    onChange={this.onChange}\r\n                  ></textarea>\r\n                  {errors.acceptanceCriteria && (\r\n                    <div className=\"invalid-feedback\">\r\n                      {errors.acceptanceCriteria}\r\n                    </div>\r\n                  )}\r\n                </div>\r\n                <h6>Due Date</h6>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"date\"\r\n                    className=\"form-control form-control-lg\"\r\n                    name=\"dueDate\"\r\n                    value={this.state.dueDate}\r\n                    onChange={this.onChange}\r\n                  />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <select\r\n                    className=\"form-control form-control-lg\"\r\n                    name=\"priority\"\r\n                    value={this.state.priority}\r\n                    onChange={this.onChange}\r\n                  >\r\n                    <option value={0}>Select Priority</option>\r\n                    <option value={1}>High</option>\r\n                    <option value={2}>Medium</option>\r\n                    <option value={3}>Low</option>\r\n                  </select>\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                  <select\r\n                    className=\"form-control form-control-lg\"\r\n                    name=\"status\"\r\n                    value={this.state.status}\r\n                    onChange={this.onChange}\r\n                  >\r\n                    <option value=\"\">Select Status</option>\r\n                    <option value=\"TO_DO\">TO DO</option>\r\n                    <option value=\"IN_PROGRESS\">IN PROGRESS</option>\r\n                    <option value=\"DONE\">DONE</option>\r\n                  </select>\r\n                </div>\r\n\r\n                <input\r\n                  type=\"submit\"\r\n                  className=\"btn btn-primary btn-block mt-4\"\r\n                />\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\naddProjectTask.propTypes = {\r\n  addProjectTask: PropTypes.func.isRequired,\r\n  errors: PropTypes.object.isRequired\r\n};\r\nconst mapStateToProps = state => ({ errors: state.errors });\r\n\r\nexport default connect(mapStateToProps, { addProjectTask })(AddProjectTask);\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport classnames from \"classnames\";\r\nimport {\r\n  getProjectTask,\r\n  updateProjectTask\r\n} from \"../../../actions/backlogActions\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nclass UpdateProjectTask extends Component {\r\n  constructor() {\r\n    super();\r\n\r\n    this.state = {\r\n      id: \"\",\r\n      projectSequence: \"\",\r\n      summary: \"\",\r\n      acceptanceCriteria: \"\",\r\n      status: \"\",\r\n      priority: \"\",\r\n      dueDate: \"\",\r\n      projectIdentifier: \"\",\r\n      create_At: \"\",\r\n      errors: {}\r\n    };\r\n    this.onChange = this.onChange.bind(this);\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n  }\r\n  componentDidMount() {\r\n    const { backlog_id, pt_id } = this.props.match.params;\r\n    this.props.getProjectTask(backlog_id, pt_id, this.props.history);\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    if (nextProps.errors) {\r\n      this.setState({ errors: nextProps.errors });\r\n    }\r\n\r\n    const {\r\n      id,\r\n      projectSequence,\r\n      summary,\r\n      acceptanceCriteria,\r\n      status,\r\n      priority,\r\n      dueDate,\r\n      projectIdentifier,\r\n      create_At\r\n    } = nextProps.project_task;\r\n\r\n    this.setState({\r\n      id,\r\n      projectSequence,\r\n      summary,\r\n      acceptanceCriteria,\r\n      status,\r\n      priority,\r\n      dueDate,\r\n      projectIdentifier,\r\n      create_At\r\n    });\r\n  }\r\n\r\n  onChange(e) {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  }\r\n\r\n  onSubmit(e) {\r\n    e.preventDefault();\r\n\r\n    const UpdateProjectTask = {\r\n      id: this.state.id,\r\n      projectSequence: this.state.projectSequence,\r\n      summary: this.state.summary,\r\n      acceptanceCriteria: this.state.acceptanceCriteria,\r\n      status: this.state.status,\r\n      priority: this.state.priority,\r\n      dueDate: this.state.dueDate,\r\n      projectIdentifier: this.state.projectIdentifier,\r\n      create_At: this.state.create_At\r\n    };\r\n\r\n    // console.log(UpdateProjectTask);\r\n    this.props.updateProjectTask(\r\n      this.state.projectIdentifier,\r\n      this.state.projectSequence,\r\n      UpdateProjectTask,\r\n      this.props.history\r\n    );\r\n  }\r\n  render() {\r\n    const { errors } = this.state;\r\n    return (\r\n      <div className=\"add-PBI\">\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-8 m-auto\">\r\n              <Link\r\n                to={`/projectBoard/${this.state.projectIdentifier}`}\r\n                className=\"btn btn-light\"\r\n              >\r\n                Back to Project Board\r\n              </Link>\r\n\r\n              <h4 className=\"display-4 text-center\">Update Project Task</h4>\r\n              <p className=\"lead text-center\">\r\n                Project Name:{this.state.projectIdentifier} + Project Task ID:{\" \"}\r\n                {this.state.projectSequence}\r\n              </p>\r\n\r\n              <form onSubmit={this.onSubmit}>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"text\"\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                      \"is-invalid\": errors.summary\r\n                    })}\r\n                    name=\"summary\"\r\n                    placeholder=\"Project Task summary\"\r\n                    value={this.state.summary}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  {errors.summary && (\r\n                    <div className=\"invalid-feed\">{errors.summary}</div>\r\n                  )}\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <textarea\r\n                    className=\"form-control form-control-lg\"\r\n                    placeholder=\"Acceptance Criteria\"\r\n                    name=\"acceptanceCriteria\"\r\n                    value={this.state.acceptanceCriteria}\r\n                    onChange={this.onChange}\r\n                  ></textarea>\r\n                </div>\r\n                <h6>Due Date</h6>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"date\"\r\n                    className=\"form-control form-control-lg\"\r\n                    name=\"dueDate\"\r\n                    value={this.state.dueDate}\r\n                    onChange={this.onChange}\r\n                  />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <select\r\n                    className=\"form-control form-control-lg\"\r\n                    name=\"priority\"\r\n                    value={this.state.priority}\r\n                    onChange={this.onChange}\r\n                  >\r\n                    <option value={0}>Select Priority</option>\r\n                    <option value={1}>High</option>\r\n                    <option value={2}>Medium</option>\r\n                    <option value={3}>Low</option>\r\n                  </select>\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                  <select\r\n                    className=\"form-control form-control-lg\"\r\n                    name=\"status\"\r\n                    value={this.state.status}\r\n                    onChange={this.onChange}\r\n                  >\r\n                    <option value=\"\">Select Status</option>\r\n                    <option value=\"TO_DO\">TO DO</option>\r\n                    <option value=\"IN_PROGRESS\">IN PROGRESS</option>\r\n                    <option value=\"DONE\">DONE</option>\r\n                  </select>\r\n                </div>\r\n\r\n                <input\r\n                  type=\"submit\"\r\n                  className=\"btn btn-primary btn-block mt-4\"\r\n                />\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nUpdateProjectTask.propTypes = {\r\n  getProjectTask: PropTypes.func.isRequired,\r\n  project_task: PropTypes.object.isRequired,\r\n  updateProjectTask: PropTypes.func.isRequired,\r\n  errors: PropTypes.object.isRequired\r\n};\r\nconst mapStateToProps = state => ({\r\n  project_task: state.backlog.project_task,\r\n  errors: state.errors\r\n});\r\n\r\nexport default connect(mapStateToProps, { getProjectTask, updateProjectTask })(\r\n  UpdateProjectTask\r\n);\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nclass Landing extends Component {\r\n  // This func. checks to see if user is logged in then it won't allow user to go to Login form\r\n  componentDidMount() {\r\n    if (this.props.security.validToken) {\r\n      this.props.history.push(\"/dashboard\");\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"landing\">\r\n        <div className=\"light-overlay landing-inner text-dark\">\r\n          <div className=\"container\">\r\n            <div className=\"row\">\r\n              <div className=\"col-md-12 text-center\">\r\n                <h1 className=\"display-3 mb-4\">\r\n                  Personal Project Management Tool\r\n                </h1>\r\n                <p className=\"lead\">\r\n                  Login to see your own projects or Sign up to start your own\r\n                  projects\r\n                </p>\r\n                <hr />\r\n                <Link\r\n                  className=\"nav-btn btn-lg btn-primary mr-2\"\r\n                  to=\"/register\"\r\n                >\r\n                  {\" \"}\r\n                  Sign Up\r\n                </Link>\r\n\r\n                <Link className=\"nav-btn btn-lg btn-secondary mr-2\" to=\"/login\">\r\n                  {\" \"}\r\n                  Login\r\n                </Link>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nLanding.propTypes = {\r\n  security: PropTypes.object.isRequired\r\n};\r\nconst mapStateToProps = state => ({\r\n  security: state.security\r\n});\r\n\r\nexport default connect(mapStateToProps)(Landing);\r\n","import React, { Component } from \"react\";\r\nimport { createNewUser } from \"../../actions/securityActions\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport classnames from \"classnames\";\r\n\r\nclass Register extends Component {\r\n  constructor() {\r\n    super();\r\n\r\n    this.state = {\r\n      username: \"\",\r\n      fullname: \"\",\r\n      password: \"\",\r\n      confirmPassword: \"\",\r\n      errors: {}\r\n    };\r\n    this.onChange = this.onChange.bind(this);\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n  }\r\n\r\n  //  This func. checks to see if user is logged in then it won't allow user to go to register form\r\n  componentDidMount() {\r\n    if (this.props.security.validToken) {\r\n      this.props.history.push(\"/dashboard\");\r\n    }\r\n  }\r\n  //life cycle hooks in react - readup on this subject to learn more\r\n  componentWillReceiveProps(nextProps) {\r\n    if (nextProps.errors) {\r\n      this.setState({ errors: nextProps.errors });\r\n    }\r\n  }\r\n\r\n  onSubmit(e) {\r\n    e.preventDefault();\r\n\r\n    const newUser = {\r\n      username: this.state.username,\r\n      fullname: this.state.fullname,\r\n      password: this.state.password,\r\n      confirmPassword: this.state.confirmPassword\r\n    };\r\n\r\n    this.props.createNewUser(newUser, this.props.history);\r\n  }\r\n\r\n  onChange(e) {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  }\r\n\r\n  render() {\r\n    const { errors } = this.state;\r\n    return (\r\n      <div className=\"register\">\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-8 m-auto\">\r\n              <h1 className=\"display-4 text-center\">Sign Up</h1>\r\n              <p className=\"lead text-center\">Create your Account</p>\r\n              <form onSubmit={this.onSubmit}>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"text\"\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                      \"is-invalid\": errors.fullname\r\n                    })}\r\n                    placeholder=\"Full Name\"\r\n                    name=\"fullname\"\r\n                    value={this.state.fullname}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  {errors.fullname && (\r\n                    <div className=\"invalid-feedback\"> {errors.fullname}</div>\r\n                  )}\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"text\"\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                      \"is-invalid\": errors.username\r\n                    })}\r\n                    placeholder=\"Email Address (is Username)\"\r\n                    name=\"username\"\r\n                    value={this.state.username}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  {errors.username && (\r\n                    <div className=\"invalid-feedback\"> {errors.username}</div>\r\n                  )}\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"password\"\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                      \"is-invalid\": errors.password\r\n                    })}\r\n                    placeholder=\"Password\"\r\n                    name=\"password\"\r\n                    value={this.state.password}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  {errors.password && (\r\n                    <div className=\"invalid-feedback\"> {errors.password}</div>\r\n                  )}\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"password\"\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                      \"is-invalid\": errors.confirmPassword\r\n                    })}\r\n                    placeholder=\"Confirm Password\"\r\n                    name=\"confirmPassword\"\r\n                    value={this.state.confirmPassword}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  {errors.confirmPassword && (\r\n                    <div className=\"invalid-feedback\">\r\n                      {\" \"}\r\n                      {errors.confirmPassword}\r\n                    </div>\r\n                  )}\r\n                </div>\r\n                <input type=\"submit\" className=\"btn btn-info btn-block mt-4\" />\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nRegister.propTypes = {\r\n  createNewUser: PropTypes.func.isRequired,\r\n  errors: PropTypes.object.isRequired,\r\n  security: PropTypes.object.isRequired\r\n};\r\nconst mapStateToProps = state => ({\r\n  errors: state.errors,\r\n  security: state.security\r\n});\r\nexport default connect(mapStateToProps, { createNewUser })(Register);\r\n","import React, { Component } from \"react\";\r\nimport { login } from \"../../actions/securityActions\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport classnames from \"classnames\";\r\n\r\nclass Login extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      username: \"\",\r\n      password: \"\",\r\n      errors: {}\r\n    };\r\n\r\n    this.onChange = this.onChange.bind(this);\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n  }\r\n\r\n  // This func. checks to see if user is logged in then it won't allow user to go to Login form\r\n  componentDidMount() {\r\n    if (this.props.security.validToken) {\r\n      this.props.history.push(\"/dashboard\");\r\n    }\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    if (nextProps.security.validToken) {\r\n      this.props.history.push(\"/dashboard\");\r\n    }\r\n\r\n    if (nextProps.errors) {\r\n      this.setState({ errors: nextProps.errors });\r\n    }\r\n  }\r\n\r\n  onSubmit(e) {\r\n    e.preventDefault();\r\n    const LoginRequest = {\r\n      username: this.state.username,\r\n      password: this.state.password\r\n    };\r\n    this.props.login(LoginRequest);\r\n  }\r\n  onChange(e) {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  }\r\n\r\n  render() {\r\n    const { errors } = this.state;\r\n\r\n    return (\r\n      <div className=\"login\">\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-8 m-auto\">\r\n              <h1 className=\"display-4 text-center\">Log In</h1>\r\n              <form onSubmit={this.onSubmit}>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"text\"\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                      \"is-invalid\": errors.username\r\n                    })}\r\n                    placeholder=\"Email Address\"\r\n                    name=\"username\"\r\n                    value={this.state.username}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  {errors.username && (\r\n                    <div className=\"invalid-feedback\">{errors.username}</div>\r\n                  )}\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"password\"\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                      \"is-invalid\": errors.password\r\n                    })}\r\n                    placeholder=\"Password\"\r\n                    name=\"password\"\r\n                    value={this.state.password}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  {errors.password && (\r\n                    <div className=\"invalid-feedback\">{errors.password}</div>\r\n                  )}\r\n                </div>\r\n                <input type=\"submit\" className=\"btn btn-info btn-block mt-4\" />\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nLogin.propTypes = {\r\n  login: PropTypes.func.isRequired,\r\n  errors: PropTypes.object.isRequired,\r\n  security: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  security: state.security,\r\n  errors: state.errors\r\n});\r\n\r\nexport default connect(mapStateToProps, { login })(Login);\r\n","import React from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst SecureRoute = ({ component: Component, security, ...otherProps }) => (\r\n  <Route\r\n    {...otherProps}\r\n    render={props =>\r\n      security.validToken === true ? (\r\n        <Component {...props} />\r\n      ) : (\r\n        <Redirect to=\"/login\" />\r\n      )\r\n    }\r\n  />\r\n);\r\n\r\nSecureRoute.propTypes = {\r\n  security: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  security: state.security\r\n});\r\nexport default connect(mapStateToProps)(SecureRoute);\r\n","import React from \"react\";\r\n//import logo from './logo.svg';\r\nimport \"./App.css\";\r\nimport Dashboard from \"./components/Dashboard\";\r\nimport Header from \"./components/Layout/Header\";\r\nimport \"bootstrap/dist/css/bootstrap.css\";\r\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\r\nimport AddProject from \"./components/Project/AddProject\";\r\nimport { Provider } from \"react-redux\";\r\nimport store from \"./store\";\r\nimport UpdateProject from \"./components/Project/UpdateProject\";\r\nimport ProjectBoard from \"./components/ProjectBoard/ProjectBoard\";\r\nimport AddProjectTask from \"./components/ProjectBoard/ProjectTask/AddProjectTask\";\r\nimport UpdateProjectTask from \"./components/ProjectBoard/ProjectTask/UpdateProjectTask\";\r\nimport Landing from \"./components/Layout/Landing\";\r\nimport Register from \"./components/UserManagement/Register\";\r\nimport Login from \"./components/UserManagement/Login\";\r\nimport jwt_decode from \"jwt-decode\";\r\nimport setJWTToken from \"./securityUtils/setJWTToken\";\r\nimport { SET_CURRENT_USER } from \"./actions/types\";\r\nimport { logout } from \"./actions/securityActions\";\r\nimport SecureRoute from \"./securityUtils/SecureRoute\";\r\n\r\n// To be sure we don't lose token after refreshing pages, we need to retrieve the token from app's localstorage\r\nconst jwtToken = localStorage.jwtToken;\r\n\r\nif (jwtToken) {\r\n  setJWTToken(jwtToken);\r\n\r\n  const decode_jwtToken = jwt_decode(jwtToken);\r\n\r\n  store.dispatch({\r\n    type: SET_CURRENT_USER,\r\n    payload: decode_jwtToken\r\n  });\r\n\r\n  const currentTime = Date.now() / 1000;\r\n  if (decode_jwtToken.exp < currentTime) {\r\n    // handle logout\r\n    store.dispatch(logout());\r\n    window.location.href = \"/\";\r\n  }\r\n}\r\n\r\nfunction App() {\r\n  return (\r\n    <Provider store={store}>\r\n      <Router>\r\n        <div className=\"App\">\r\n          <Header />\r\n          {\r\n            // Public Routes\r\n          }\r\n          <Route exact path=\"/\" component={Landing} />\r\n          <Route exact path=\"/register\" component={Register} />\r\n          <Route exact path=\"/login\" component={Login} />\r\n\r\n          {\r\n            // Private Routes\r\n          }\r\n          <Switch>\r\n            <SecureRoute exact path=\"/dashboard\" component={Dashboard} />\r\n            <SecureRoute exact path=\"/addProject\" component={AddProject} />\r\n            <SecureRoute\r\n              exact\r\n              path=\"/updateProject/:id\"\r\n              component={UpdateProject}\r\n            />\r\n            <SecureRoute\r\n              exact\r\n              path=\"/projectBoard/:id\"\r\n              component={ProjectBoard}\r\n            />\r\n            <SecureRoute\r\n              exact\r\n              path=\"/addProjectTask/:id\"\r\n              component={AddProjectTask}\r\n            />\r\n            <SecureRoute\r\n              exact\r\n              path=\"/updateProjectTask/:backlog_id/:pt_id\"\r\n              component={UpdateProjectTask}\r\n            />\r\n          </Switch>\r\n        </div>\r\n      </Router>\r\n    </Provider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}